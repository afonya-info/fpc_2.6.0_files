program komand;

uses  crt, unilis3_changecount;

type
  inf = int64;
  Tlist = ^list;
  list = record
    data: inf;
    next, prev: tlist;
  end;

var
  first: pointer;k: inf;rk: char;p: pointer; x, pos: integer;
  c, i: byte;
  s, s1, s2, s3, s4: string;
  a: array[1..11] of string;
  hist, poshist: integer;
  flag: boolean;
//----------------------------------------------------------
function Pro(s: string): boolean;
var
  c: integer;i: int64;
begin
  pro := true;
  if length(s) > 10 then
    pro := false
  else
  begin
    val(s2, i, c);
    if (c <> 0)
      then
      pro := false
    else
    begin
      if(i > 32767) or (i < -32600) then
        pro := false;
    end;
    
  end;
end;

procedure Spisok2(var s: string; var poshist: integer);
begin
  inc(poshist);
  delline;
  s := '';
  s := a[poshist];
  gotoxy(1, wherey);
  write(s);
end;
//-------------------------------------------------------------
procedure Spisok(var s: string; var poshist: integer);
begin
  dec(poshist);
  if poshist = 0 then poshist := 1;
  delline;
  s := '';
  s := a[poshist];
  gotoxy(1, wherey);
  write(s);
end;
//-------------------------------------------------------------
procedure History(var hist: integer; s: string);
begin
  inc(hist);
  if hist < 11 then
    a[hist] := s
  else
  begin
    for i := 1 to 9 do
      a[i] := a[i + 1];
    hist := 10;
    a[hist] := s;
  end;
end;
//------------------------------------------------
procedure normal(var s: string);
var
  l, i: byte;
begin
  l := length(s);
  i := 1;
  while (s[i] = ' ') and (i <= l) do
  begin
    inc(i);
  end;
  delete(s, 1, i - 1);
  l := length(s);
  i := l;
  while (s[i] = ' ') and (i > 0) do
  begin
    delete(s, i, 1);
    dec(i);
  end;
end;
//-----------------


procedure Sort(s: string);
var
  i, l, l1, c: integer;
  //---------------------------------------------
  procedure Delprobel(var i, l: integer);
  begin
    while (s[i] = ' ') and (i <= l) do
      inc(i);
    dec(i);
  end;
  //--------------------------------------------
  procedure Delneprobel(var i, l: integer);
  begin
    while ((s[i] <> ' ') and (s[i] <> ',')) and (i <= l) do
      inc(i);
    dec(i);
  end;
//--------------------------------------
begin
  i := 1;
  l := length(s);
  Delneprobel(i, l);
  s1 := copy(s, 1, i);
  delete(s, 1, i);
  i := 1;
  l := length(s);
  Delprobel(i, l);
  delete(s, 1, i);
  i := 1;
  l := length(s);
  
  Delneprobel(i, l);
  s2 := copy(s, 1, i);
  delete(s, 1, i);
  i := 1;
  l := length(s);
  Delprobel(i, l);
  delete(s, 1, i);
  s3 := s[1];
  delete(s, 1, 1);
  
  i := 1;
  l := length(s);
  Delprobel(i, l);
  
  delete(s, 1, i);
  
  i := 1;
  l := length(s);
  Delneprobel(i, l);
  s4 := copy(s, 1, i);
  
end;
//------------------------------------------------------------
procedure Help();
begin
  writeln();
  textcolor(14);
  writeln('Ring double linked list');
  writeln('        "Help"                    |Help and menu');
  writeln('        "Add a"                   |Add number a to list ');
  writeln('        "Addpos a,b"              |Add on position a item  b');
  writeln('        "Delpos a"                |Del number in positin a ');
  writeln('        "Delzn a"                 |Del number a to list');
  writeln('        "Print"                   |Display the list');
  writeln('        "Free"                    |Clear the list');
  writeln('        "Clear"                   |Clear display');
  writeln('        "Count"                   |Count items in list ');
  writeln('          Tab                     |Autocompletion');
  writeln('           Del                    |Delete string');
  writeln('Press arrow UP                    |Back to the last commands');
  writeln('        "Exit" and esc            |Exit from the program  ')
end;
//---------------------------------------------------
procedure Coun();
var
  c: integer;
begin
  writeln();
  writeln('Count items=', counter);
end;
//-------------------------------------------------------------
procedure addd(s2: string);
var
  c, k, l, i: integer;f: boolean;
begin
  i := 0;
  k := 0;
  f := pro(s2);
	inc(counter);
  if f = false then inc(k);
  if k = 0 then
  begin
    val(s2, i, c);
    add(p, i, first);
  end
  else
  begin
    writeln();
    textcolor(4);
    write('Error');
    normvideo;
  end;
end;

//----------------------------------------
procedure addp(s2, s3, s4: string);
var
  c, k: integer;i, d: int64;f: boolean;
begin
  i := 0;
  k := 0;
	inc(counter);
  if s3 <> ',' then
    inc(k);
  
  f := pro(s2);
  if f = false then
    inc(k)
  else
    val(s2, i, c);
  d := 0;
  f := pro(s4);
  if f = false then
    inc(k)
  else
    val(s4, d, c);
  if k = 0 then  begin addpos(first, i, d, p);   end
  else begin writeln(); write('Error'); end
end;

//---------------------------------------
procedure delp(s2: string);
var
  i, k, c: integer;f: boolean;
begin
  i := 0;
  k := 0;
  f := pro(s2);
	dec(counter);
  if f = false then inc(k);
  if k = 0 then
  begin
    val(s2, i, c);
    delpos(first, i);
  end
  else begin writeln(); write('Error');  end;
end;
//--------------------------------------
procedure delz(s2: string);
var
  i, c, k: integer;f: boolean;
begin
  i := 0;
  k := 0;
  f := pro(s2);
  if f = false then inc(k);
  if k = 0 then
  begin
    val(s2, i, c);
    delzn(first, i);
  end
  else begin writeln(); write('Error');  end;
end;
//-------------------------------------------
procedure Centr(s1, s2, s3, s4: string);
begin
  case s1 of
    'help': help();
    'clear': clrscr;
    'free': free(first);
    'print': print(first);
    'count': coun;
    'add': addd(s2);
    'addpos': addp(s2, s3, s4);
    'delpos': delp(s2);
    'delzn': delz(s2);
    'exit': rk := #27
  else begin textcolor(8); writeln(); writeln('Unknow kommand'); normvideo;  end;
  end;
end;
//-------------------------------------------------------------
procedure Enter(var s: string; var hist: integer);
var
  i: byte;
begin
  delline;
  gotoxy(1, wherey);
  write(s);
  normal(s);
  History(hist, s);
  sort(s);
  Centr(s1, s2, s3, s4);
  writeln();
  s := '';
  poshist := hist + 1;
end;
//----------------------------------------------------------------
procedure del;
var
  x1: integer;
begin
  if x > 1 then
  begin
    x1 := x;
    delete(s, x1 - 1, 1);
    delline;
    gotoxy(1, wherey);
    write(s);
    gotoxy(x1 - 1, wherey);
  end; end;
//--------------------------------------------------------
procedure Dop(var s: string);
var
  i: integer; s1: string;
begin
  i := length(s);
  while (s[i] = ' ') do
  begin
    delete(s, i, 1);
    dec(i);
  end;
  i := length(s);
  while  (s[i] <> ' ') and (i > 0) do
    dec(i);
  s1 := copy(s, i + 1, length(s) - i);
  i := length(s1);
  case s1 of
    'a', 'ad': s := 'add';
    'p', 'pr', 'pri', 'prin': s := 'print';
    'addp', 'addpo': s := 'addpos';
    'h', 'he', 'hel': s := 'help';
    'f', 'fr', 'fre': s := 'free';
    'c', 'cl', 'cle', 'clea': s := 'clear';
    's', 'se', 'sea', 'sear', 'searc': s := 'search';
    'd', 'de', 'del', 'delp', 'delpo': s := 'delpos';
    'co', 'cou', 'coun': s := 'count';
    'delz': s := 'delzn';
    'so', 'sor': s := 'sort';
    'e', 'ex', 'exi': s := 'exit';
  end;
  delline;
  gotoxy(1, wherey);
  write(s);
end;
 //----------------------------------------------------------------------
procedure Vspliv(s: string; x: integer);
var
  pos, y: integer;s1: string;
begin
  y := wherey;
  s1 := '';
  textcolor(14);
  case s of
    'a', 'ad': s1 := 'add';
    'p', 'pr', 'pri', 'prin': s1 := 'print';
    'addp', 'addpo': s1 := 'addpos';
    'h', 'he', 'hel': s1 := 'help';
    'f', 'fr', 'fre': s1 := 'free';
    'c', 'cl', 'cle', 'clea': s1 := 'clear';
    's', 'se', 'sea', 'sear', 'searc': s1 := 'search';
    'd', 'de', 'del', 'delp', 'delpo': s1 := 'delpos';
    'co', 'cou', 'coun': s1 := 'count';
    'delz': s1 := 'delzn';
    'so', 'sor': s1 := 'sort';
    'e', 'ex', 'exi': s1 := 'exit';
  end;
  gotoxy(90, wherey);
  write(s1);
  gotoxy(x + 1, wherey);
  normvideo;
end;

procedure Delstr(var s: string);
begin
  s := '';
  delline();
  gotoxy(1, wherey);
end;

begin
  clrscr;
  poshist := 0;
  hist := 0;
  flag := false;
  repeat
    x := wherex;
    if length(s) > 90 then
    begin
      writeln();
      writeln('bust');
      s := '';
      gotoxy(1, wherey);
      x := 1;
    end;
    rk := readkey;
    if rk = #0 then
    begin
      rk := readkey;
      case rk of
        #75: begin if x > 1 then begin gotoxy(wherex - 1, wherey); end; end;
        #77:  begin if x <= length(s) then begin gotoxy(wherex + 1, wherey); end; end;
        #72: begin if poshist > 0 then begin spisok(s, poshist); end; end;
        #80:  begin if(poshist < hist) then begin spisok2(s, poshist); end; end;
        #83: begin delstr(s); end;
      end;
    end
    else
    begin
      case rk of
        #8: begin del; end;
        #9: begin dop(s); end;
        #13: begin enter(s, hist); end
      else
        begin
          if ((rk > #31) and (rk < #127)) or ((rk > #192) and (rk < #255)) then
          begin
            insert(rk, s, wherex);
            s := lowercase(s);
            delline;
            gotoxy(1, wherey);
            if wherey >= 30 then
              clrscr;
            write(s);
           vspliv(s, x);
          end;
        end;
      end;
    end;
  until rk = #27;
  free(first);
end.

