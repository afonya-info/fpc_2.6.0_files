unit unilis;

interface

uses crt;

const
  max = 100000;

type
  inf = int64;
  Tlist = ^list;
  list = record
    data: inf;
    next: Tlist;
    prev: Tlist;
  end;

var
  p, first, last: Tlist;
  c, a, b: integer;
  s: string;

procedure Createelem(var p: Tlist; i: inf);
procedure Add(var p: Tlist; i: inf; var first: tlist);
function Count(first: tlist): longint;
procedure Print(first: Tlist);
procedure Addpos(var first: tlist; k: longint; i: inf; p: tlist);
procedure Free(var first: tlist);
procedure Delpos(var first: tList; k: longint);
procedure Del(var p, temp: tlist);
procedure Aaa(var kur, p, temp: tlist);
procedure Delzn(var first: tlist; k: inf);
implementation

procedure cvet(s: string; a, b: integer);
begin
  textcolor(a);
  textbackground(b);
  writeln();
  write(s);
  normvideo;
end;
procedure Delzn(var first: tlist; k: inf);
var
  kur, temp, temp1: tlist;
  n, i, c: int64;
  flag, f: boolean;
begin
  if first = nil then
  begin
    textcolor(13);
    writeln();
    write('The list impty');
    normvideo;
    exit;
  end;
  f := false;
  temp := first;
  kur := first;
  c := count(first);
  repeat
    flag := true;
    n := count(first);
    if temp^.data = k
         then
    begin
      if n = 1
                      then
      begin
        dispose(temp);
        first := nil;
        s := 'item removed';
        a := 14;
        b := 0;
        cvet(s, a, b);
        exit;
      end
                      else
      begin
        if temp = first
                                then
        begin
          f := true;
          flag := false;
          temp1 := first;
          temp := temp^.next;
          first := first^.next;
          temp1^.prev^.next := first;
          first^.prev := temp1^.prev;
          dispose(temp1);
        end
                                 else
        begin
          f := true;
          temp1 := temp;
          temp := temp^.next;
          kur := temp1^.prev;
          del(kur, temp1);
          dispose(temp1);
        end
      end;
    end
    else
      temp := temp^.next;
  until (flag = true) and (temp = first);
  if f = true then
  begin
    s := 'item removed';
    a := 14;
    b := 0;
    cvet(s, a, b);
  end
        else
  begin
    writeln();
    write('Item not found');
  end;
end;

procedure Del(var p, temp: tlist);
begin
  p^.next := temp^.next;
  temp^.next^.prev := p;
end;


procedure Createelem(var p: Tlist; i: inf);
begin
  new(p);
  p^.data := i;
  p^.next := nil;
  p^.prev := nil;
end;


procedure Add(var p: Tlist; i: inf; var first: tlist);
begin
  Createelem(p, i);
  if first = nil then
  begin
    first := p;
    p^.next := p;
    p^.prev := p;
  end
  else
  begin
    p^.next := first;// cycle list
    p^.prev := first^.prev;//find last from first by cycling list
    first^.prev^.next := p;// say to last that it is not last any more
    first^.prev := p;//recycling
  end;
  s := 'item succesfully added';
  a := 13;
  b := 0;
  cvet(s, a, b);
end;


function Count(first: tlist): longint;
var
  kur: tlist;
  k: longint;
begin
  if first = nil then
  begin
    count := 0;
    textcolor(13);
    writeln();
    write('The list impty');
    normvideo;
    exit;
  end;
  k := 0;
  kur := first;
  repeat
    inc(k);
    kur := kur^.next;
  until kur = first;
  count := k;
end;
 
procedure Aaa(var kur, p, temp: tlist);
begin
  kur^.next := p;
  p^.prev := kur;
  temp^.prev := p;
  p^.next := temp;
end;
 
procedure Addpos(var first: tlist; k: longint; i: inf; p: tlist);
var
  kur, temp: tlist;
  n, c: longint;
begin
  if first = nil then
  begin
    textcolor(13);
    writeln();
    write('The list impty');
    normvideo;
    exit;
  end;
  n := Count(first);
  if (k < 1) or (k > n) then
  begin
    writeln();
    textcolor(1);//textattr
    write('Cannot insert into this positon');
    normvideo;
    exit;
  end;
  n := count(first);
  Createelem(p,i);
	{new(p);
  p^.data := i;
  p^.next := nil;
  p^.prev := nil;}
  if k = 1 then
  begin
    temp := first;
    first := p;
    first^.next := temp;//----?-----
    temp^.prev^.next := first;
    first^.prev := temp^.prev;
    temp^.prev := first;
    s := 'item succesfully added';
    a := 10;
    b := 0;
    cvet(s, a, b);
    exit;
  end;
    {if k=n then
  begin
  p^.prev:=first^.prev^.prev;
  first^.prev^.prev^.next:=p;
  p^.next:=first^.prev;
  first^.prev^.prev:=p;
  writeln('YES');
  exit;
  end; }
  c := 1;
  kur := first;
  for c := 1 to k - 2 do
    kur := kur^.next;
  temp := kur^.next;
  Aaa(kur, p, temp);
  {p^.prev:=kur;
  p^.next:=temp;
  kur^.next^.prev:=p;
  kur^.next:=p;}
  s := 'item succesfully added';
  a := 15;
  b := 0;
  cvet(s, a, b);
end;
//---------------------------------------------------
procedure Print(first: Tlist);
var
  kur: TList;
begin
  if first = nil then
  begin
    textcolor(13);
    writeln();
    write('The list impty');
    normvideo;
    exit;
  end;
  kur := first;
  writeln();
  repeat
    write(kur^.data, ' ');
    kur := kur^.next;
  until kur = first;
  
end;
//-------------------------------------------------------
procedure Free(var first: tlist);
var
  kur, del: tlist;
begin
  if first = nil then
  begin
    textcolor(13);
    writeln();
    write('The list impty');
    normvideo;
    exit;
  end;
  kur := first;
  repeat
    del := kur;
    kur := kur^.next;
    dispose(del);
  until kur = first;
  first := nil;
  s := 'clean list';
  a := 14;
  b := 0;
  cvet(s, a, b);
end;
//-----------------------------------------------------------------------
procedure Delpos(var first: tList; k: longint);
var
  temp, kur: tlist;
  n, i: longint;
begin
  if first = nil then
  begin
    textcolor(13);
    writeln();
    write('The list impty');
    normvideo;
    exit;
  end;
  n := count(first);
  if (k < 1) or (k > n) then
  begin
    writeln();
    write('cannot delete into this positon');
    exit;
  end;
  if k = 1 then
  begin
    temp := first;
    first := first^.next;
    temp^.prev^.next := first;
    first^.prev := temp^.prev;
    dispose(temp);
    //  freemem(first);
    if n = 1 then
      first := nil;
    s := 'item succesfully delete';
    a := 13;
    b := 0;
    cvet(s, a, b);
    exit;
  end;
  { if k=n then
   begin
   temp:=first^.prev;
   kur:=temp^.prev;
   del(kur,temp);
   first^.prev:=temp^.prev;
   temp^.prev^.next:=first;
   dispose(temp);
   writeln('Del');
   exit;
   end;   }
  kur := first;
  for i := 1 to k - 2 do
    kur := kur^.next;
  temp := kur^.next;
  del(kur, temp);
   {kur^.next:=temp^.next;
   temp^.next^.prev:=kur; }
  dispose(temp);
  s := 'item succesfully delete';
  a := 12;
  b := 0;
  cvet(s, a, b);
end;

end.
